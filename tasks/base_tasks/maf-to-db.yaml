apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: maf-to-db-template
spec:
  templates:
    - name: maf-to-db
      # nodeSelector:
      #   kubernetes.io/hostname: "{{inputs.parameters.node-name}}"
      inputs:
        parameters:
          - name: input-maf
          - name: sample-id
          - name: batch-size
            value: "1000"
      volumes:
        - name: input-maf
          hostPath:
            path: "{{inputs.parameters.input-maf}}"
            type: File
      script:
        name: "maf-to-db-script"
        image: bergun/gennext-maf-to-db:v0.0.2c
        command: [sh]
        source: |
          python -m main\
            -i /mnt/input/maf/{{=sprig.osBase(inputs.parameters['input-maf'])}} \
            -s {{inputs.parameters.sample-id}} \
            -b {{inputs.parameters.batch-size}} || exit 0
        env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_USER
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_PASSWORD
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_HOST
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_PORT
        volumeMounts:
          - name: input-maf
            mountPath: /mnt/input/maf/{{=sprig.osBase(inputs.parameters['input-maf'])}}
    - name: maf-to-db-with-node-selector
      nodeSelector:
        kubernetes.io/hostname: "{{inputs.parameters.node-name}}"
      inputs:
        parameters:
          - name: input-maf
          - name: sample-id
          - name: batch-size
            value: "1000"
          - name: node-name
      volumes:
        - name: input-maf
          hostPath:
            path: "{{inputs.parameters.input-maf}}"
            type: File
      script:
        name: "maf-to-db-script"
        image: bergun/gennext-maf-to-db:v0.0.2c
        command: [sh]
        source: |
          python -m main\
            -i /mnt/input/maf/{{=sprig.osBase(inputs.parameters['input-maf'])}} \
            -s {{inputs.parameters.sample-id}} \
            -b {{inputs.parameters.batch-size}}
        env:
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_USER
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_PASSWORD
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_HOST
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name:  gennext-allele-db
                key:  DATABASE_PORT
        volumeMounts:
          - name: input-maf
            mountPath: /mnt/input/maf/{{=sprig.osBase(inputs.parameters['input-maf'])}}
