apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: seqkit-bedtools-template
spec:
  templates:
    - name: seqkit-bedtools-bam-to-fq-rm-dup
      inputs:
        parameters:
          - name: input-bam
          - name: output-fq-r1
          - name: output-fq-r2
      outputs:
        parameters:
          - name: output-fq-r1
            value: "{{inputs.parameters.output-fq-r1}}"
          - name: output-fq-r2
            value: "{{inputs.parameters.output-fq-r2}}"
      volumes:
        - name: output-fq-r1
          hostPath:
            path: "{{=sprig.osDir(inputs.parameters['output-fq-r1'])}}"
            type: DirectoryOrCreate
        - name: output-fq-r2
          hostPath:
            path: "{{=sprig.osDir(inputs.parameters['output-fq-r1'])}}"
            type: DirectoryOrCreate
        - name: input-bam
          hostPath:
            path: "{{inputs.parameters.input-bam}}"
            type: File
      script:
        name: "seqkit-bedtools-bam-to-fq-script"
        image: bergun/seqkit_bedtools:v0.0.1
        command: [bash]
        source: |
          mkfifo aln.end1.fifo;
          mkfifo aln.end2.fifo;
          bedtools bamtofastq \
          -i /mnt/input/bam/{{=sprig.osBase(inputs.parameters['input-bam'])}} \
          -fq aln.end1.fifo -fq2 aln.end2.fifo & cat aln.end1.fifo | /tools/seqkit \
          rmdup --ignore-case | gzip > /mnt/output/r1/{{=sprig.osBase(inputs.parameters['output-fq-r1'])}} & cat aln.end2.fifo | /tools/seqkit \
          rmdup --ignore-case | gzip > /mnt/output/r2/{{=sprig.osBase(inputs.parameters['output-fq-r2'])}} & wait; rm aln.end1.fifo aln.end2.fifo

        volumeMounts:
          - name: output-fq-r1
            mountPath: "/mnt/output/r1/"
          - name: output-fq-r2
            mountPath: "/mnt/output/r2/"
          - name: input-bam
            mountPath: "/mnt/input/bam/{{=sprig.osBase(inputs.parameters['input-bam'])}}"
