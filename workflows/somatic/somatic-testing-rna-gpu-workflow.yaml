apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: somatic-testing-rna-gpu-workflow
spec:
  templates:
    - name: somatic-testing-rna-gpu-fastq
      inputs:
        parameters:
          - name: user-id
          - name: run-id
          - name: run-data
          - name: input-rel-dir
          - name: ref-base-dir
          - name: temp-rel-dir
          - name: scratch-rel-dir
          - name: output-rel-dir
          - name: thread-count
            default: "8"
      outputs:
        parameters:
          - name: bam-output
            valueFrom:
              parameter: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
              # parameter: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
      dag:
        tasks:
          - name: get-abs-ref-dirs
            templateRef:
              name: get-abs-ref-dirs
              template: get-abs-ref-dirs
            arguments:
              parameters:
                - name: ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}"
                - name: ref-ver
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
          - name: copy-fastq-to-scratch
            templateRef:
              name: copy-inputs-to-scratch
              template: copy-fastq-to-scratch
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.fqR1RNA.name')}}"
                - name: fq-r2
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.fqR2RNA.name')}}"
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
          - name: copy-regions-file-to-scratch
            templateRef:
              name: copy-inputs-to-scratch
              template: copy-regions-file-to-scratch
            arguments:
              parameters:
                - name: regions-file
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.regionsFileRNA.name')}}"
                  # value: "A3416642_all_merged_Regions.bed"
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
            depends: "copy-fastq-to-scratch"
          - name: compose-read-group-str
            templateRef:
              name: compose-read-group-str
              template: compose-read-group-str-from-fq
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r1}}"
                - name: sample-name
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
            depends: "copy-fastq-to-scratch"
          - name: pre-fastqc
            templateRef:
              name: fastqc-template
              template: fastqc
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r2}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/fastqc/pre-trim/"
            depends: "copy-fastq-to-scratch"
          - name: trim-galore
            templateRef:
              name: trim-galore-template
              template: trim-galore
            arguments:
              parameters:
                - name: sample-name
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: fq-r1
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r2}}"
                - name: thread-count
                  value: "{{=sprig.int(inputs.parameters['thread-count']) - 2}}"
                - name: output-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}trimmed_reads/"
            depends: "copy-fastq-to-scratch"
          - name: star-fusion
            templateRef:
              name: star-fusion-template
              template: star-fusion
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: read-group-str
                  value: "{{tasks.compose-read-group-str.outputs.parameters.read-group-str-no-rg-prefix}}"
                - name: fq-r1
                  value: "{{tasks.trim-galore.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.trim-galore.outputs.parameters.fq-r2}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
                - name: output-bam
                  value: "{{inputs.parameters.scratch-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_unsorted_RNA.bam"
                - name: output-fusions-tsv
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions.tsv"
                - name: output-chimeric-out-fusions
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_Chimeric.out.junction"
                - name: scratch-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}star-fusion/"
                - name: ctat-genome-lib-build-dir
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ctat-genome-lib-build-dir}}"
            depends: "trim-galore && get-abs-ref-dirs && compose-read-group-str"
          - name: samtools-sort-index
            templateRef:
              name: samtools-template
              template: samtools-remove-orphans-sort-index
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.star-fusion.outputs.parameters.output-bam}}"
                - name: output-bam
                  value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "star-fusion"
          # - name: pb-rnafq2bam
          #   templateRef:
          #     name: parabricks-rnafq2bam-template
          #     template: parabricks-rnafq2bam
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: genome-ref
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
          #       - name: input-fq-r1
          #         value: "{{tasks.trim-galore.outputs.parameters.fq-r1}}"
          #       - name: input-fq-r2
          #         value: "{{tasks.trim-galore.outputs.parameters.fq-r2}}"
          #       - name: scratch-dir
          #         value: "{{inputs.parameters.scratch-rel-dir}}/star/"
          #       - name: output-bam
          #         value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}/results/rna/"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "trim-galore && get-abs-ref-dirs"
          # - name: pb-starfusion
          #   templateRef:
          #     name: parabricks-starfusion-template
          #     template: parabricks-starfusion
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: chimeric-junction-file
          #         value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-chimeric-junction-file}}"
          #       - name: genome-lib-dir
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ctat-genome-lib-build-dir}}"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}results/rna/fusions/"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "pb-rnafq2bam && get-abs-ref-dirs"
          - name: qorts
            templateRef:
              name: qorts-template
              template: qorts
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: gene-annotation-gtf
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.gene-annotation-gtf}}"
                - name: chrom-sizes
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.chrom-sizes}}"
                - name: input-bam
                  # value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}results/rna/qorts/"
            # depends: "pb-rnafq2bam && get-abs-ref-dirs"
            depends: "samtools-sort-index && get-abs-ref-dirs"
          - name: star-fusion-to-oncokb
            templateRef:
              name: star-fusion-to-oncokb-template
              template: star-fusion-to-oncokb
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: star-fusion-tsv
                  # value: "{{tasks.pb-starfusion.outputs.parameters.output-fusions-tsv}}"
                  value: "{{tasks.star-fusion.outputs.parameters.output-fusions-tsv}}"
                - name: star-fusion-oncokb-tsv
                  value: "{{inputs.parameters.scratch-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions_oncokb_base.tsv"
            # depends: "pb-starfusion"
            depends: "star-fusion"
          - name: oncokb-fusions
            templateRef:
              name: oncokb-templates
              template: oncokb-fusions
            arguments:
              parameters:
                - name: oncokb-fusions-in-f
                  value: "{{tasks.star-fusion-to-oncokb.outputs.parameters.star-fusion-oncokb-tsv}}"
                - name: oncokb-fusions-out-f
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions_oncokb.tsv"
            depends: "star-fusion-to-oncokb"
          - name: duckdb-fusions
            templateRef:
              name: duckdb-template
              template: duckdb-fusions
            arguments:
              parameters:
                - name: oncokb-tsv-f
                  value: "{{tasks.oncokb-fusions.outputs.parameters.oncokb-fusions-out-f}}"
                - name: output-duckdb
                  value: "{{inputs.parameters.temp-rel-dir}}results/db/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions.duckdb"
            depends: "oncokb-fusions"
          # - name: samtools-sort-index
          #   templateRef:
          #     name: samtools-template
          #     template: samtools-sort-index
          #   arguments:
          #     parameters:
          #       - name: input-bam
          #         value: "{{tasks.star-fusion.outputs.parameters.output-bam}}"
          #       - name: output-bam
          #         value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "star-fusion"
          # - name: msisensor-pro
          #   templateRef:
          #     name: msisensor-pro-template
          #     template: msisensor-pro
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: input-bam
          #         value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}results/fusions/msisensor/"
          #       - name: tcga-baseline
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.msisensor-pro-baseline}}"
          #   depends: "samtools-sort-index && get-abs-ref-dirs"
          - name: verifybamid
            templateRef:
              name: verifybamid-template
              template: verifybamid-exome-wrapper
            arguments:
              parameters:
                - name: input-bam
                  # value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/verifybamid/"
                - name: ref-version
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
                - name: verifybamid-ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}/other/verifybamid/"
            # depends: "pb-rnafq2bam"
            depends: "samtools-sort-index"
          - name: mosdepth
            templateRef:
              name: mosdepth-template
              template: mosdepth
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-bam
                  # value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/mosdepth/"
                - name: regions-bed-f
                  value: "{{tasks.copy-regions-file-to-scratch.outputs.parameters.regions-file}}"
            # depends: "get-abs-ref-dirs && verifybamid && pb-rnafq2bam && copy-regions-file-to-scratch"
            depends: "get-abs-ref-dirs && verifybamid && samtools-sort-index && copy-regions-file-to-scratch"
          - name: multiqc
            templateRef:
              name: multiqc-template
              template: main
            arguments:
              parameters:
                - name: input-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/"
            # depends: "verifybamid && pb-starfusion && mosdepth"
            depends: "verifybamid && samtools-sort-index && mosdepth"
          - name: collect-qc-data
            templateRef:
              name: collect-qc-data-templates
              template: collect-qc-data
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: run-id
                  value: "{{inputs.parameters.run-id}}"
                - name: sample-fqs-fnames
                  value: '["{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR1RNA.name'')}}", "{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR2RNA.name'')}}"]'
                  # value: '["{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR1.name'')}}", "{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR2.name'')}}"]'
                  # value: '["{{=sprig.osBase(tasks[''pb-bam2fq''].outputs.parameters[''output-fq-r1''])}}", "{{=sprig.osBase(tasks[''pb-bam2fq''].outputs.parameters[''output-fq-r2''])}}"]'
                - name: metrics-dir
                  value: "{{tasks.multiqc.outputs.parameters.output-dir}}"
                - name: data-source-type
                  value: "rna"
            depends: "multiqc && mosdepth && verifybamid"
          - name: copy-temp-to-output
            templateRef:
              name: copy-temp-to-output
              template: copy-temp-to-output-no-out
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: output-rel-dir
                  value: "{{inputs.parameters.output-rel-dir}}"
                - name: temp-rel-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
            depends: "collect-qc-data && duckdb-fusions && qorts"
          - name: clean-scratch
            templateRef:
              name: dir-clean-up
              template: dir-clean-up
            arguments:
              parameters:
                - name: directory
                  value: "{{inputs.parameters.scratch-rel-dir}}"
            depends: "copy-temp-to-output"
    - name: somatic-testing-rna-gpu-bam
      inputs:
        parameters:
          - name: user-id
          - name: run-id
          - name: run-data
          - name: input-rel-dir
          - name: ref-base-dir
          - name: temp-rel-dir
          - name: scratch-rel-dir
          - name: output-rel-dir
          - name: thread-count
            default: "8"
      outputs:
        parameters:
          - name: bam-output
            valueFrom:
              # parameter: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
              parameter: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
      dag:
        tasks:
          - name: get-abs-ref-dirs
            templateRef:
              name: get-abs-ref-dirs
              template: get-abs-ref-dirs
            arguments:
              parameters:
                - name: ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}"
                - name: ref-ver
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
          - name: check-file-path
            templateRef:
              name: check-file-path
              template: check-file-path
            arguments:
              parameters:
                - name: input-file-1
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.bamRNA.name')}}"
                - name: input-file-2
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.regionsFileRNA.name')}}"
                - name: input-file-3
                  value: "."
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
          - name: copy-bam-to-scratch
            templateRef:
              name: copy-inputs-to-scratch
              template: copy-bam-to-scratch
            arguments:
              parameters:
                - name: bam
                  value: "{{tasks.check-file-path.outputs.parameters.output-file-1}}"
                  # value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.bamRNA.name')}}"
                - name: input-rel-dir
                  value: "{{tasks.check-file-path.outputs.parameters.input-rel-dir-1}}"
                  # value: "{{inputs.parameters.input-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}reads/"
            depends: "check-file-path"
          - name: copy-regions-file-to-scratch
            templateRef:
              name: copy-inputs-to-scratch
              template: copy-regions-file-to-scratch
            arguments:
              parameters:
                - name: regions-file
                  value: "{{tasks.check-file-path.outputs.parameters.output-file-2}}"
                  # value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.regionsFileRNA.name')}}"
                  # value: "A3416642_all_merged_Regions.bed"
                - name: input-rel-dir
                  value: "{{tasks.check-file-path.outputs.parameters.input-rel-dir-2}}"
                  # value: "{{inputs.parameters.input-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
            depends: "copy-bam-to-scratch && check-file-path"
          - name: pb-bam2fq
            templateRef:
              name: parabricks-bam2fq-template
              template: parabricks-bam2fq
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-bam
                  value: "{{tasks.copy-bam-to-scratch.outputs.parameters.bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}reads/"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "copy-bam-to-scratch"
          - name: compose-read-group-str
            templateRef:
              name: compose-read-group-str
              template: compose-read-group-str-from-fq
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r1}}"
                - name: sample-name
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
            depends: "pb-bam2fq"
          - name: pre-fastqc
            templateRef:
              name: fastqc-template
              template: fastqc
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r2}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/fastqc/pre-trim/"
            depends: "pb-bam2fq"
          # - name: pb-rnafq2bam
          #   templateRef:
          #     name: parabricks-rnafq2bam-template
          #     template: parabricks-rnafq2bam
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: genome-ref
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
          #       - name: input-fq-r1
          #         value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r1}}"
          #       - name: input-fq-r2
          #         value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r2}}"
          #       - name: scratch-dir
          #         value: "{{inputs.parameters.scratch-rel-dir}}/star/"
          #       - name: output-bam
          #         value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}/results/rna/"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "pb-bam2fq && get-abs-ref-dirs"
          # - name: pb-starfusion
          #   templateRef:
          #     name: parabricks-starfusion-template
          #     template: parabricks-starfusion
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: chimeric-junction-file
          #         value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-chimeric-junction-file}}"
          #       - name: genome-lib-dir
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ctat-genome-lib-build-dir}}"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}/results/rna/fusions/"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "pb-rnafq2bam && get-abs-ref-dirs"
          - name: star-fusion
            templateRef:
              name: star-fusion-template
              template: star-fusion
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: read-group-str
                  value: "{{tasks.compose-read-group-str.outputs.parameters.read-group-str-no-rg-prefix}}"
                - name: fq-r1
                  value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.pb-bam2fq.outputs.parameters.output-fq-r2}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
                - name: output-bam
                  value: "{{inputs.parameters.scratch-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_unsorted_RNA.bam"
                - name: output-fusions-tsv
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions.tsv"
                - name: output-chimeric-out-fusions
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_Chimeric.out.junction"
                - name: scratch-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}star-fusion/"
                - name: ctat-genome-lib-build-dir
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ctat-genome-lib-build-dir}}"
            depends: "pb-bam2fq && get-abs-ref-dirs && compose-read-group-str"
          - name: samtools-sort-index
            templateRef:
              name: samtools-template
              template: samtools-remove-orphans-sort-index
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.star-fusion.outputs.parameters.output-bam}}"
                - name: output-bam
                  value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "star-fusion"
          - name: qorts
            templateRef:
              name: qorts-template
              template: qorts
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: gene-annotation-gtf
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.gene-annotation-gtf}}"
                - name: chrom-sizes
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.chrom-sizes}}"
                - name: input-bam
                  # value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}results/rna/qorts/"
            # depends: "pb-rnafq2bam && get-abs-ref-dirs"
            depends: "samtools-sort-index && get-abs-ref-dirs"
          - name: star-fusion-to-oncokb
            templateRef:
              name: star-fusion-to-oncokb-template
              template: star-fusion-to-oncokb
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: star-fusion-tsv
                  # value: "{{tasks.pb-starfusion.outputs.parameters.output-fusions-tsv}}"
                  value: "{{tasks.star-fusion.outputs.parameters.output-fusions-tsv}}"
                - name: star-fusion-oncokb-tsv
                  value: "{{inputs.parameters.scratch-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions_oncokb_base.tsv"
            # depends: "pb-starfusion"
            depends: "star-fusion"
          - name: oncokb-fusions
            templateRef:
              name: oncokb-templates
              template: oncokb-fusions
            arguments:
              parameters:
                - name: oncokb-fusions-in-f
                  value: "{{tasks.star-fusion-to-oncokb.outputs.parameters.star-fusion-oncokb-tsv}}"
                - name: oncokb-fusions-out-f
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions_oncokb.tsv"
            depends: "star-fusion-to-oncokb"
          - name: duckdb-fusions
            templateRef:
              name: duckdb-template
              template: duckdb-fusions
            arguments:
              parameters:
                - name: oncokb-tsv-f
                  value: "{{tasks.oncokb-fusions.outputs.parameters.oncokb-fusions-out-f}}"
                - name: output-duckdb
                  value: "{{inputs.parameters.temp-rel-dir}}results/db/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions.duckdb"
            depends: "oncokb-fusions"
          # - name: samtools-sort-index
          #   templateRef:
          #     name: samtools-template
          #     template: samtools-sort-index
          #   arguments:
          #     parameters:
          #       - name: input-bam
          #         value: "{{tasks.star-fusion.outputs.parameters.output-bam}}"
          #       - name: output-bam
          #         value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "star-fusion"
          # - name: msisensor-pro
          #   templateRef:
          #     name: msisensor-pro-template
          #     template: msisensor-pro
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: input-bam
          #         value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}results/fusions/msisensor/"
          #       - name: tcga-baseline
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.msisensor-pro-baseline}}"
          #   depends: "samtools-sort-index && get-abs-ref-dirs"
          - name: verifybamid
            templateRef:
              name: verifybamid-template
              template: verifybamid-exome-wrapper
            arguments:
              parameters:
                - name: input-bam
                  # value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/verifybamid/"
                - name: ref-version
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
                - name: verifybamid-ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}/other/verifybamid/"
            depends: "samtools-sort-index"
          - name: mosdepth
            templateRef:
              name: mosdepth-template
              template: mosdepth
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-bam
                  # value: "{{tasks.pb-rnafq2bam.outputs.parameters.output-bam}}"
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/mosdepth/"
                - name: regions-bed-f
                  value: "{{tasks.copy-regions-file-to-scratch.outputs.parameters.regions-file}}"
            # depends: "get-abs-ref-dirs && verifybamid && pb-rnafq2bam && copy-regions-file-to-scratch"
            depends: "get-abs-ref-dirs && verifybamid && samtools-sort-index && copy-regions-file-to-scratch"
          - name: multiqc
            templateRef:
              name: multiqc-template
              template: main
            arguments:
              parameters:
                - name: input-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/"
            depends: "verifybamid && mosdepth"
          - name: collect-qc-data
            templateRef:
              name: collect-qc-data-templates
              template: collect-qc-data
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: run-id
                  value: "{{inputs.parameters.run-id}}"
                - name: sample-fqs-fnames
                  # value: '["{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR1.name'')}}", "{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR2.name'')}}"]'
                  # value: '["{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR1.name'')}}", "{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR2.name'')}}"]'
                  value: '["{{=sprig.osBase(tasks[''pb-bam2fq''].outputs.parameters[''output-fq-r1''])}}", "{{=sprig.osBase(tasks[''pb-bam2fq''].outputs.parameters[''output-fq-r2''])}}"]'
                - name: metrics-dir
                  value: "{{tasks.multiqc.outputs.parameters.output-dir}}"
                - name: data-source-type
                  value: "rna"
            depends: "multiqc && mosdepth && verifybamid"
          - name: copy-temp-to-output
            templateRef:
              name: copy-temp-to-output
              template: copy-temp-to-output-no-out
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: output-rel-dir
                  value: "{{inputs.parameters.output-rel-dir}}"
                - name: temp-rel-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
            depends: "collect-qc-data && duckdb-fusions && qorts"
          - name: clean-scratch
            templateRef:
              name: dir-clean-up
              template: dir-clean-up
            arguments:
              parameters:
                - name: directory
                  value: "{{inputs.parameters.scratch-rel-dir}}"
            depends: "copy-temp-to-output"
