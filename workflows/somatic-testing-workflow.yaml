apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: somatic-testing-workflow
spec:
  templates:
    - name: somatic-testing-tumor
      inputs:
        parameters:
          - name: user-id
          - name: run-id
          - name: run-data
          - name: input-rel-dir
          - name: ref-base-dir
          - name: temp-rel-dir
          - name: scratch-rel-dir
          - name: output-rel-dir
          - name: thread-count
            default: "20"
      outputs:
        parameters:
          - name: bam-output
            valueFrom:
              parameter: "{{tasks.elprep.outputs.parameters.output-bam}}"
          # - name: vcf-hc-output
          #   valueFrom:
          #     parameter: "{{tasks.haplotypecaller.outputs.parameters.output-vcf}}"
          # - name: vcf-dv-output
          #   valueFrom:
          #     parameter: "{{tasks.deepvariant.outputs.parameters.output-vcf}}"
      dag:
        tasks:
          - name: get-abs-ref-dirs
            templateRef:
              name: get-abs-ref-dirs
              template: get-abs-ref-dirs
            arguments:
              parameters:
                - name: ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}"
                - name: ref-ver
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
          - name: copy-fastq-to-scratch
            templateRef:
              name: copy-inputs-to-scratch
              template: copy-fastq-to-scratch
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.fqR1.name')}}"
                - name: fq-r2
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.fqR2.name')}}"
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
          - name: preprocess-fastq
            templateRef:
              name: preprocess-fastq
              # template: preprocess-bwa-mem-2
              template: main
            arguments:
              parameters:
                - name: sample-name
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: fq-r1
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.copy-fastq-to-scratch.outputs.parameters.fq-r2}}"
                - name: genome-ref
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
                - name: temp-abs-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
                - name: scratch-abs-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
            depends: "copy-fastq-to-scratch && get-abs-ref-dirs"
          - name: elprep
            templateRef:
              name: elprep-template
              template: elprep
            arguments:
              parameters:
                - name: sample-name
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: genome-ref
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
                - name: regions-file
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-all-tracks}}"
                - name: dbsnp-elsites-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-dbsnp-f}}.elsites"
                - name: input-bam
                  value: "{{tasks.preprocess-fastq.outputs.parameters.bam}}"
                - name: output-bam
                  value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_recal.bam"
                - name: metrics-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/"
                - name: scratch-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
                - name: thread-count
                  value: "{{=sprig.int(inputs.parameters['thread-count']) - 2}}"
            depends: "preprocess-fastq"
          - name: samtools-index
            templateRef:
              name: samtools-template
              template: samtools-index
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "elprep"
          # - name: bed-split
          #   templateRef:
          #     name: bed-split-template
          #     template: main
          #   arguments:
          #     parameters:
          #       - name: regions-file
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.regions-bed-f}}"
          #       - name: output-dir
          #         value: "{{inputs.parameters.scratch-rel-dir}}bed-split/"
          #       - name: thread-count
          #         value: "{{inputs.parameters.thread-count}}"
          #   depends: "copy-inputs-to-scratch"
          - name: mutect2-calls
            templateRef:
              name: mutect2-template
              template: mutect2-tumor-only
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: output-vcf
                  value: "{{inputs.parameters.scratch-rel-dir}}snv/vcf/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_mutect2.vcf.gz"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
                - name: ref-genome-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
                - name: gnomad-data-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.gnomad-af-f}}"
                - name: 1000g-pon-data-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.1000g-pon-f}}"
                - name: regions-file
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-snv}}"
            depends: "elprep && get-abs-ref-dirs && samtools-index"
          - name: mutect2-filter
            templateRef:
              name: mutect2-template
              template: mutect2-mark-calls
            arguments:
              parameters:
                - name: input-unfiltered-vcf
                  value: "{{tasks.mutect2-calls.outputs.parameters.output-vcf}}"
                - name: output-marked-vcf
                  value: "{{inputs.parameters.temp-rel-dir}}snv/vcf/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_mutect2_marked.vcf.gz"
                - name: ref-genome-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
                - name: regions-file
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-snv}}"
            depends: "mutect2-calls && get-abs-ref-dirs"
          - name: bcftools-filter
            templateRef:
              name: bcftools-template
              template: bcftools-filter-and-bed
            arguments:
              parameters:
                - name: do-filter
                  value: ""
                - name: input-vcf-f
                  value: "{{tasks.mutect2-filter.outputs.parameters.output-marked-vcf}}"
                - name: output-vcf-f
                  value: "{{inputs.parameters.temp-rel-dir}}/snv/vcf/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_mutect2_filtered.vcf.gz"
                - name: regions-file
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-snv}}"
            depends: "mutect2-filter && get-abs-ref-dirs"
          - name: vlod
            templateRef:
              name: vlod-template
              template: vlod
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: input-vcf
                  value: "{{tasks.bcftools-filter.outputs.parameters.output-vcf-f}}"
                - name: vlod-out-tsv
                  value: "{{inputs.parameters.scratch-rel-dir}}results/snv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_vlod.tsv.gz"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "bcftools-filter && elprep"
          - name: vlod-merge-with-vcf
            templateRef:
              name: vlod-template
              template: vlod-merge-with-vcf
            arguments:
              parameters:
                - name: input-vcf
                  value: "{{tasks.bcftools-filter.outputs.parameters.output-vcf-f}}"
                - name: input-vlod-tsv
                  value: "{{tasks.vlod.outputs.parameters.vlod-out-tsv}}"
                - name: vlod-merged-output-vcf
                  value: "{{inputs.parameters.temp-rel-dir}}results/snv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_mutect2_vlod.vcf" # output returns .gz
            depends: "bcftools-filter && vlod"
          - name: annovar
            templateRef:
              name: annovar-template
              template: annovar
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-vcf-f
                  value: "{{tasks.vlod-merge-with-vcf.outputs.parameters.vlod-merged-output-vcf}}"
                - name: ref-version
                  value: "hg38"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}results/snv/"
                - name: annovardb-dir
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.annovar-dir}}"
            depends: "vlod-merge-with-vcf && get-abs-ref-dirs"
          - name: cancervar
            templateRef:
              name: cancervar-template
              template: cancervar
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-vcf-f
                  value: "{{tasks.vlod-merge-with-vcf.outputs.parameters.vlod-merged-output-vcf}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}results/snv/"
                - name: annovardb-dir
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.annovar-dir}}"
            depends: "annovar && get-abs-ref-dirs"
          - name: annovar-to-maf
            templateRef:
              name: annovar-to-maf-template
              template: annovar-to-maf
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: annovar-out-f
                  value: "{{tasks.annovar.outputs.parameters.annovar-out-f}}"
            depends: "annovar"
          - name: oncokb-snv
            templateRef:
              name: oncokb-templates
              template: oncokb-snv
            arguments:
              parameters:
                - name: annovar-maf-f
                  value: "{{tasks.annovar-to-maf.outputs.parameters.annovar-maf-f}}"
                - name: annovar-oncokb-maf-f
                  value: "{{inputs.parameters.temp-rel-dir}}results/snv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_oncokb.maf"
                - name: ref-version
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
            depends: "annovar-to-maf"
          - name: get-otherinfo-columns
            templateRef:
              name: duckdb-template
              template: determine-otherinfo-column
            arguments:
              parameters:
                - name: annovar-oncokb-maf
                  value: "{{tasks.oncokb-snv.outputs.parameters.annovar-oncokb-maf-f}}"
            depends: "oncokb-snv"
          - name: duckdb-snv
            templateRef:
              name: duckdb-template
              template: duckdb-snv
            arguments:
              parameters:
                - name: annovar-oncokb-maf
                  value: "{{tasks.oncokb-snv.outputs.parameters.annovar-oncokb-maf-f}}"
                - name: cancervar-tsv
                  value: "{{tasks.cancervar.outputs.parameters.cancervar-out-f}}"
                - name: vlod-column-name
                  value: "{{tasks.get-otherinfo-columns.outputs.parameters.vlod-column-name}}"
                - name: filter-column-name
                  value: "{{tasks.get-otherinfo-columns.outputs.parameters.filter-column-name}}"
                - name: sample-column-name
                  value: "{{tasks.get-otherinfo-columns.outputs.parameters.sample-column-name}}"
                - name: output-duckdb
                  value: "{{inputs.parameters.temp-rel-dir}}results/db/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_results.duckdb"
            depends: "oncokb-snv && cancervar && get-otherinfo-columns"
          - name: manta
            templateRef:
              name: manta-template
              template: manta
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: tumor-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: ref-genome-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ref-genome-f}}"
                - name: regions-file
                  # value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-sv-merged}}"
                  # value: ""
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.canonical-chroms-regions}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}results/sv/"
                - name: scratch-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}manta/"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "elprep && samtools-index && get-abs-ref-dirs"
          - name: bcftools-filter-and-bed
            templateRef:
              name: bcftools-template
              template: bcftools-filter-and-bed
            arguments:
              parameters:
                - name: input-vcf-f
                  value: "{{tasks.manta.outputs.parameters.output-tumor-vcf-f}}"
                - name: output-vcf-f
                  value: "{{inputs.parameters.temp-rel-dir}}results/sv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_SV.vcf.gz"
                - name: regions-file
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-sv-merged}}"
                - name: do-filter
                  value: ""
            depends: "manta"
          - name: annotsv
            templateRef:
              name: annotsv-template
              template: annotsv
            arguments:
              parameters:
                - name: input-vcf-f
                  value: "{{tasks.bcftools-filter-and-bed.outputs.parameters.output-vcf-f}}"
                - name: annotsv-ref-dir
                  value: "{{inputs.parameters.ref-base-dir}}{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}/other/AnnotSV/"
                - name: ref-version
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
                - name: sv-min-size
                  value: "20"
                - name: output-annotsv-tsv-f
                  value: "{{inputs.parameters.scratch-rel-dir}}annotsv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_SV_annot.tsv"
            depends: "bcftools-filter-and-bed"
          - name: filter-annotsv
            templateRef:
              name: filter-annotsv-template
              template: filter-annotsv
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: annotsv-tsv
                  value: "{{tasks.annotsv.outputs.parameters.output-annotsv-tsv-f}}"
                - name: sv-cnv-geneslist-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-geneslists-sv-cnv}}"
                - name: sv-translocations-geneslist-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-geneslists-sv-translocation}}"
                - name: annotsv-filtered-out-tsv
                  value: "{{inputs.parameters.temp-rel-dir}}results/sv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_SV_annot_filtered.tsv"
                - name: annotsv-oncokb-out-tsv
                  value: "{{inputs.parameters.scratch-rel-dir}}oncokb/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_SV_oncokb.tsv"
            depends: "annotsv && get-abs-ref-dirs"
          - name: oncokb-sv
            templateRef:
              name: oncokb-templates
              template: oncokb-sv
            arguments:
              parameters:
                - name: oncokb-sv-in-f
                  value: "{{tasks.filter-annotsv.outputs.parameters.annotsv-oncokb-out-tsv}}"
                - name: oncokb-sv-out-f
                  value: "{{inputs.parameters.temp-rel-dir}}results/sv/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_SV_oncokb_annot.tsv"
            depends: "filter-annotsv"
          - name: duckdb-sv
            templateRef:
              name: duckdb-template
              template: duckdb-sv
            arguments:
              parameters:
                - name: oncokb-tsv-f
                  value: "{{tasks.oncokb-sv.outputs.parameters.oncokb-sv-out-f}}"
                - name: annotsv-tsv-f
                  value: "{{tasks.filter-annotsv.outputs.parameters.annotsv-filtered-out-tsv}}"
                - name: output-duckdb
                  value: "{{inputs.parameters.temp-rel-dir}}results/db/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_results.duckdb"
            depends: "oncokb-sv"
          - name: verifybamid
            templateRef:
              name: verifybamid-template
              template: verifybamid-exome-wrapper
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/verifybamid/"
                - name: ref-version
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
                - name: verifybamid-ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}/other/verifybamid/"
            depends: "elprep && samtools-index"
          - name: mosdepth
            templateRef:
              name: mosdepth-template
              template: mosdepth-exome
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/mosdepth/"
                - name: regions-bed-f
                  # value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-snv}}"
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-all-tracks}}"
            depends: "elprep && get-abs-ref-dirs && verifybamid && samtools-index"
          - name: msisensor-pro
            templateRef:
              name: msisensor-pro-template
              template: msisensor-pro
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-bam
                  value: "{{tasks.elprep.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}results/snv/msisensor/"
                - name: tcga-baseline
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.msisensor-pro-baseline}}"
            depends: "elprep && get-abs-ref-dirs"
          - name: collect-somatic-data
            # collects TMB and MSI information
            templateRef:
              name: collect-somatic-data-templates
              template: collect-somatic-data
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: run-id
                  value: "{{inputs.parameters.run-id}}"
                - name: cancervar-in-f
                  value: "{{tasks.cancervar.outputs.parameters.cancervar-out-f}}"
                - name: msisensorpro-in-f
                  value: "{{tasks.msisensor-pro.outputs.parameters.output-tsv}}"
                - name: snv-regions-bed-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3416642-regions-snv}}"
            depends: "get-abs-ref-dirs && cancervar && msisensor-pro"
          - name: multiqc
            templateRef:
              name: multiqc-template
              template: main
            arguments:
              parameters:
                - name: input-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/"
            depends: "verifybamid && elprep && mosdepth"
          - name: collect-qc-data
            templateRef:
              name: collect-qc-data-templates
              template: collect-qc-data
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: run-id
                  value: "{{inputs.parameters.run-id}}"
                - name: sample-fqs-fnames
                  # value: '["{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR1.name'')}}", "{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR2.name'')}}"]'
                  value: '["{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR1.name'')}}", "{{=jsonpath(inputs.parameters[''run-data''], ''$.samples[0].files.fqR2.name'')}}"]'
                - name: metrics-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/"
            depends: "multiqc && mosdepth && verifybamid"
          - name: copy-temp-to-output
            templateRef:
              name: copy-temp-to-output
              template: copy-temp-to-output
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: output-rel-dir
                  value: "{{inputs.parameters.output-rel-dir}}"
                - name: temp-rel-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
            depends: "collect-qc-data && collect-somatic-data && duckdb-sv && duckdb-snv"
          - name: clean-scratch
            templateRef:
              name: dir-clean-up
              template: dir-clean-up
            arguments:
              parameters:
                - name: directory
                  value: "{{inputs.parameters.scratch-rel-dir}}"
            # depends: "copy-temp-to-output"
            depends: "verifybamid && mosdepth && multiqc && duckdb-sv && duckdb-snv"
    - name: somatic-testing-rna
      inputs:
        parameters:
          - name: user-id
          - name: run-id
          - name: run-data
          - name: input-rel-dir
          - name: ref-base-dir
          - name: temp-rel-dir
          - name: scratch-rel-dir
          - name: output-rel-dir
          - name: thread-count
            default: "8"
      outputs:
        parameters:
          - name: bam-output
            valueFrom:
              parameter: "{{tasks.star-fusion.outputs.parameters.output-bam}}"
      dag:
        tasks:
          - name: get-abs-ref-dirs
            templateRef:
              name: get-abs-ref-dirs
              template: get-abs-ref-dirs
            arguments:
              parameters:
                - name: ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}"
                - name: ref-ver
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
          - name: copy-inputs-to-scratch
            templateRef:
              name: copy-inputs-to-scratch
              template: copy-fastq-to-scratch
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.fqR1RNA.name')}}"
                - name: fq-r2
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].files.fqR2RNA.name')}}"
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
          - name: pre-fastqc
            templateRef:
              name: fastqc-template
              template: fastqc
            arguments:
              parameters:
                - name: fq-r1
                  value: "{{tasks.copy-inputs-to-scratch.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.copy-inputs-to-scratch.outputs.parameters.fq-r2}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/fastqc/pre-trim/"
            depends: "copy-inputs-to-scratch"
          - name: trim-galore
            templateRef:
              name: trim-galore-template
              template: trim-galore
            arguments:
              parameters:
                - name: sample-name
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: fq-r1
                  value: "{{tasks.copy-inputs-to-scratch.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.copy-inputs-to-scratch.outputs.parameters.fq-r2}}"
                - name: thread-count
                  value: "{{=sprig.int(inputs.parameters['thread-count']) - 2}}"
                - name: output-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}trimmed_reads/"
            depends: "copy-inputs-to-scratch"
          - name: star-fusion
            templateRef:
              name: star-fusion-template
              template: star-fusion
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: fq-r1
                  value: "{{tasks.trim-galore.outputs.parameters.fq-r1}}"
                - name: fq-r2
                  value: "{{tasks.trim-galore.outputs.parameters.fq-r2}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
                - name: output-bam
                  value: "{{inputs.parameters.scratch-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_unsorted_RNA.bam"
                - name: output-fusions-tsv
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions.tsv"
                - name: output-chimeric-out-fusions
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_Chimeric.out.junction"
                - name: scratch-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}star-fusion/"
                - name: ctat-genome-lib-build-dir
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.ctat-genome-lib-build-dir}}"
            depends: "trim-galore && get-abs-ref-dirs"
          - name: star-fusion-to-oncokb
            templateRef:
              name: star-fusion-to-oncokb-template
              template: star-fusion-to-oncokb
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: star-fusion-tsv
                  value: "{{tasks.star-fusion.outputs.parameters.output-fusions-tsv}}"
                - name: star-fusion-oncokb-tsv
                  value: "{{inputs.parameters.scratch-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions_oncokb_base.tsv"
            depends: "star-fusion"
          - name: oncokb-fusions
            templateRef:
              name: oncokb-templates
              template: oncokb-fusions
            arguments:
              parameters:
                - name: oncokb-fusions-in-f
                  value: "{{tasks.star-fusion-to-oncokb.outputs.parameters.star-fusion-oncokb-tsv}}"
                - name: oncokb-fusions-out-f
                  value: "{{inputs.parameters.temp-rel-dir}}results/fusions/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions_oncokb.tsv"
            depends: "star-fusion-to-oncokb"
          - name: duckdb-fusions
            templateRef:
              name: duckdb-template
              template: duckdb-fusions
            arguments:
              parameters:
                - name: oncokb-tsv-f
                  value: "{{tasks.oncokb-fusions.outputs.parameters.oncokb-fusions-out-f}}"
                - name: output-duckdb
                  value: "{{inputs.parameters.temp-rel-dir}}results/db/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_fusions.duckdb"
            depends: "oncokb-fusions"
          - name: samtools-sort-index
            templateRef:
              name: samtools-template
              template: samtools-sort-index
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.star-fusion.outputs.parameters.output-bam}}"
                - name: output-bam
                  value: "{{inputs.parameters.temp-rel-dir}}bam/{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}_RNA.bam"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
            depends: "star-fusion"
          # - name: msisensor-pro
          #   templateRef:
          #     name: msisensor-pro-template
          #     template: msisensor-pro
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: input-bam
          #         value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
          #       - name: output-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}results/fusions/msisensor/"
          #       - name: tcga-baseline
          #         value: "{{tasks.get-abs-ref-dirs.outputs.parameters.msisensor-pro-baseline}}"
          #   depends: "samtools-sort-index && get-abs-ref-dirs"
          - name: verifybamid
            templateRef:
              name: verifybamid-template
              template: verifybamid-exome-wrapper
            arguments:
              parameters:
                - name: input-bam
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/verifybamid/"
                - name: ref-version
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}"
                - name: verifybamid-ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}{{=jsonpath(inputs.parameters['run-data'], '$.refVersion')}}/other/verifybamid/"
            depends: "samtools-sort-index"
          - name: mosdepth
            templateRef:
              name: mosdepth-template
              template: mosdepth-exome
            arguments:
              parameters:
                - name: sample-id
                  value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
                - name: input-bam
                  value: "{{tasks.samtools-sort-index.outputs.parameters.output-bam}}"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/mosdepth/"
                - name: regions-bed-f
                  value: "{{tasks.get-abs-ref-dirs.outputs.parameters.somtest-A3370051-regions-fusions}}"
            depends: "get-abs-ref-dirs && verifybamid && samtools-sort-index"
          - name: multiqc
            templateRef:
              name: multiqc-template
              template: main
            arguments:
              parameters:
                - name: input-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/"
                - name: output-dir
                  value: "{{inputs.parameters.temp-rel-dir}}metrics/rna/"
            depends: "verifybamid && star-fusion && mosdepth"
          # - name: copy-temp-to-output
          #   templateRef:
          #     name: copy-temp-to-output
          #     template: copy-temp-to-output-no-out
          #   arguments:
          #     parameters:
          #       - name: sample-id
          #         value: "{{=jsonpath(inputs.parameters['run-data'], '$.samples[0].sampleId')}}"
          #       - name: output-rel-dir
          #         value: "{{inputs.parameters.output-rel-dir}}"
          #       - name: temp-rel-dir
          #         value: "{{inputs.parameters.temp-rel-dir}}"
          #   depends: "multiqc && duckdb-fusions"
          # - name: clean-scratch
          #   templateRef:
          #     name: dir-clean-up
          #     template: dir-clean-up
          #   arguments:
          #     parameters:
          #       - name: directory
          #         value: "{{inputs.parameters.scratch-rel-dir}}"
          #   depends: "copy-temp-to-output"
    - name: somatic-testing-tumor-rna
      inputs:
        parameters:
          - name: user-id
          - name: run-id
          - name: run-data
          - name: input-rel-dir
          - name: ref-base-dir
          - name: temp-rel-dir
          - name: scratch-rel-dir
          - name: output-rel-dir
          - name: thread-count
            default: "8"
      dag:
        tasks:
          - name: som-test-tumor-workflow
            templateRef:
              name: somatic-testing-workflow
              template: somatic-testing-tumor
            arguments:
              parameters:
                - name: user-id
                  value: "{{inputs.parameters.user-id}}"
                - name: run-id
                  value: "{{inputs.parameters.run-id}}"
                - name: run-data
                  value: "{{inputs.parameters.run-data}}"
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
                - name: ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}"
                - name: temp-rel-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
                - name: output-rel-dir
                  value: "{{inputs.parameters.output-rel-dir}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
          - name: som-test-rna-workflow
            templateRef:
              name: somatic-testing-workflow
              template: somatic-testing-rna
            arguments:
              parameters:
                - name: user-id
                  value: "{{inputs.parameters.user-id}}"
                - name: run-id
                  value: "{{inputs.parameters.run-id}}"
                - name: run-data
                  value: "{{inputs.parameters.run-data}}"
                - name: input-rel-dir
                  value: "{{inputs.parameters.input-rel-dir}}"
                - name: ref-base-dir
                  value: "{{inputs.parameters.ref-base-dir}}"
                - name: temp-rel-dir
                  value: "{{inputs.parameters.temp-rel-dir}}"
                - name: scratch-rel-dir
                  value: "{{inputs.parameters.scratch-rel-dir}}"
                - name: output-rel-dir
                  value: "{{inputs.parameters.output-rel-dir}}"
                - name: thread-count
                  value: "{{inputs.parameters.thread-count}}"
